[
  {
    "Start": 615,
    "Length": 94,
    "SourcePath": "C:\\Users\\SPG\\Documents\\Visual Studio 2013\\Projects\\ExampleProject\\ExampleProject\\Company.ExampleProject.Boolean ParameterToConstantValue\\ParameterToConstantValue.cs",
    "SourceCode": "using ExampleProject.Company.ParameterChangeIf.API;\r\nusing Microsoft.CodeAnalysis;\r\nusing System;\r\nusing System.Collections.Generic;\r\nusing System.Linq;\r\nusing System.Text;\r\nusing System.Threading.Tasks;\r\n\r\nnamespace ExampleProject.Company.ExampleProject.Boolean_ParameterToConstantValue\r\n{\r\n    public static partial class ParameterToConstantValue\r\n    {\r\n        public static SyntaxToken Literal(int value)\r\n        {\r\n            return Literal(ObjectDisplay.FormatLiteral(value, useHexadecimalNumbers: false), value);\r\n        }\r\n\r\n        public static SyntaxToken Literal(uint value)\r\n        {\r\n            return Literal(ObjectDisplay.FormatLiteral(value, useHexadecimalNumbers: false) + \"U\", value);\r\n        }\r\n\r\n        public static SyntaxToken Literal(long value)\r\n        {\r\n            return Literal(ObjectDisplay.FormatLiteral(value, useHexadecimalNumbers: false) + \"L\", value);\r\n        }\r\n\r\n        public static SyntaxToken Literal(ulong value)\r\n        {\r\n            return Literal(ObjectDisplay.FormatLiteral(value, useHexadecimalNumbers: false) + \"UL\", value);\r\n        }\r\n\r\n        public static SyntaxToken Literal(float value)\r\n        {\r\n            return Literal(ObjectDisplay.FormatLiteral(value) + \"F\", value);\r\n        }\r\n\r\n        public static SyntaxToken Literal(double value)\r\n        {\r\n            return Literal(ObjectDisplay.FormatLiteral(value), value);\r\n        }\r\n\r\n        public static SyntaxToken Literal(decimal value)\r\n        {\r\n            return Literal(ObjectDisplay.FormatLiteral(value) + \"M\", value);\r\n        }\r\n\r\n        public static SyntaxToken Literal(char value)\r\n        {\r\n            return Literal(ObjectDisplay.FormatLiteral(value, quote: true, includeCodePoints: false, useHexadecimalNumbers: false), value);\r\n        }\r\n\r\n        private static SyntaxToken Literal(object p, object value)\r\n        {\r\n            throw new NotImplementedException();\r\n        }\r\n    }\r\n}"
  },
  {
    "Start": 802,
    "Length": 94,
    "SourcePath": "C:\\Users\\SPG\\Documents\\Visual Studio 2013\\Projects\\ExampleProject\\ExampleProject\\Company.ExampleProject.Boolean ParameterToConstantValue\\ParameterToConstantValue.cs",
    "SourceCode": "using ExampleProject.Company.ParameterChangeIf.API;\r\nusing Microsoft.CodeAnalysis;\r\nusing System;\r\nusing System.Collections.Generic;\r\nusing System.Linq;\r\nusing System.Text;\r\nusing System.Threading.Tasks;\r\n\r\nnamespace ExampleProject.Company.ExampleProject.Boolean_ParameterToConstantValue\r\n{\r\n    public static partial class ParameterToConstantValue\r\n    {\r\n        public static SyntaxToken Literal(int value)\r\n        {\r\n            return Literal(ObjectDisplay.FormatLiteral(value, useHexadecimalNumbers: false), value);\r\n        }\r\n\r\n        public static SyntaxToken Literal(uint value)\r\n        {\r\n            return Literal(ObjectDisplay.FormatLiteral(value, useHexadecimalNumbers: false) + \"U\", value);\r\n        }\r\n\r\n        public static SyntaxToken Literal(long value)\r\n        {\r\n            return Literal(ObjectDisplay.FormatLiteral(value, useHexadecimalNumbers: false) + \"L\", value);\r\n        }\r\n\r\n        public static SyntaxToken Literal(ulong value)\r\n        {\r\n            return Literal(ObjectDisplay.FormatLiteral(value, useHexadecimalNumbers: false) + \"UL\", value);\r\n        }\r\n\r\n        public static SyntaxToken Literal(float value)\r\n        {\r\n            return Literal(ObjectDisplay.FormatLiteral(value) + \"F\", value);\r\n        }\r\n\r\n        public static SyntaxToken Literal(double value)\r\n        {\r\n            return Literal(ObjectDisplay.FormatLiteral(value), value);\r\n        }\r\n\r\n        public static SyntaxToken Literal(decimal value)\r\n        {\r\n            return Literal(ObjectDisplay.FormatLiteral(value) + \"M\", value);\r\n        }\r\n\r\n        public static SyntaxToken Literal(char value)\r\n        {\r\n            return Literal(ObjectDisplay.FormatLiteral(value, quote: true, includeCodePoints: false, useHexadecimalNumbers: false), value);\r\n        }\r\n\r\n        private static SyntaxToken Literal(object p, object value)\r\n        {\r\n            throw new NotImplementedException();\r\n        }\r\n    }\r\n}"
  },
  {
    "Start": 990,
    "Length": 95,
    "SourcePath": "C:\\Users\\SPG\\Documents\\Visual Studio 2013\\Projects\\ExampleProject\\ExampleProject\\Company.ExampleProject.Boolean ParameterToConstantValue\\ParameterToConstantValue.cs",
    "SourceCode": "using ExampleProject.Company.ParameterChangeIf.API;\r\nusing Microsoft.CodeAnalysis;\r\nusing System;\r\nusing System.Collections.Generic;\r\nusing System.Linq;\r\nusing System.Text;\r\nusing System.Threading.Tasks;\r\n\r\nnamespace ExampleProject.Company.ExampleProject.Boolean_ParameterToConstantValue\r\n{\r\n    public static partial class ParameterToConstantValue\r\n    {\r\n        public static SyntaxToken Literal(int value)\r\n        {\r\n            return Literal(ObjectDisplay.FormatLiteral(value, useHexadecimalNumbers: false), value);\r\n        }\r\n\r\n        public static SyntaxToken Literal(uint value)\r\n        {\r\n            return Literal(ObjectDisplay.FormatLiteral(value, useHexadecimalNumbers: false) + \"U\", value);\r\n        }\r\n\r\n        public static SyntaxToken Literal(long value)\r\n        {\r\n            return Literal(ObjectDisplay.FormatLiteral(value, useHexadecimalNumbers: false) + \"L\", value);\r\n        }\r\n\r\n        public static SyntaxToken Literal(ulong value)\r\n        {\r\n            return Literal(ObjectDisplay.FormatLiteral(value, useHexadecimalNumbers: false) + \"UL\", value);\r\n        }\r\n\r\n        public static SyntaxToken Literal(float value)\r\n        {\r\n            return Literal(ObjectDisplay.FormatLiteral(value) + \"F\", value);\r\n        }\r\n\r\n        public static SyntaxToken Literal(double value)\r\n        {\r\n            return Literal(ObjectDisplay.FormatLiteral(value), value);\r\n        }\r\n\r\n        public static SyntaxToken Literal(decimal value)\r\n        {\r\n            return Literal(ObjectDisplay.FormatLiteral(value) + \"M\", value);\r\n        }\r\n\r\n        public static SyntaxToken Literal(char value)\r\n        {\r\n            return Literal(ObjectDisplay.FormatLiteral(value, quote: true, includeCodePoints: false, useHexadecimalNumbers: false), value);\r\n        }\r\n\r\n        private static SyntaxToken Literal(object p, object value)\r\n        {\r\n            throw new NotImplementedException();\r\n        }\r\n    }\r\n}"
  }
]